========================================================================================
Template
========================================================================================
Iteration : 

parameters = 
			{'dtc_smote__criterion': ['gini', 'entropy'],
          'ct__subpipe_num__num_impute__strategy': ['mean','median'],
          'dtc_smote__min_samples_leaf': [8, 14, 20],
          'sm__k_neighbors': [2, 3, 4],
          'sm__sampling_strategy':['auto',0.4435,0.6667]}
		  
best params:
{'ct__subpipe_num__num_impute__strategy': 'mean',
 'dtc_smote__criterion': 'gini',
 'dtc_smote__min_samples_leaf': 20,
 'sm__k_neighbors': 4,
 'sm__sampling_strategy': 0.4435}
 
		  
gs_pipe.print_cv_summary()		  
	CV Results for `gs_dtc_model` model:
            0.83724 Â± 0.00462 accuracy
		  
gs.best_estimator_.score(X_valid, y_valid)
			0.8410717257447162


classification report below
              precision    recall  f1-score   support

           0       0.89      0.91      0.90      4781
           1       0.62      0.56      0.59      1228

    accuracy                           0.84      6009
   macro avg       0.76      0.74      0.75      6009
weighted avg       0.84      0.84      0.84      6009


Summary: 
========================================================================================
Iteration : 1

parameters = 
		  
		  
best params:

 
		  
gs_pipe.print_cv_summary()		  
	CV Results for `gs_dtc_model` model:
            
		  
gs.best_estimator_.score(X_valid, y_valid)
			


classification report below



Summary:
